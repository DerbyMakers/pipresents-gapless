# This file in /pipresents/pp_resources/pp_templates may be overwritten by updates and is not used by Pi Presents
# copy the file to the profile that is to use it.

# There is no checking of the content of this file by Pi Presents, try any changes by
#  running from a terminal window so that any exceptions are reported

# USE
# ===
# This file binds physical pins on an MPR121 attached to the Pi's I2C bus
# At present it only supports capacitive input mode, rather than the full GPIO capability of the MPR121.

# The DRIVER section must be present. It must enable the address of any MPR121 to be used. 
# A section for every pin used must be present in the file with a direction of touch, in, out or none. A pin with direction = none is ignored. directions in and out will be ignored until GPIO capability is added.
# Pins on each mpr121 are numbered 0 to 11 as per the mpr121 datasheet.

# TOUCH
# -----
#  Each input pin can generate an event having the specified symbolic name in any of four ways.
#  * rising edge  - An event with the symbolic name specified in 'rising-name' is generated when the pin goes from untouched to touched.
#  * falling edge  - An event with the symbolic name specified in 'falling-name' is generated when the input changes from touched to untouched.
# If you do not want the event to be generated leave the symbolic name blank

# Example of an unused pin - pin 10 on mpr121 with address 5A
# [5A-10]
# direction = none

# Example of a pin that creates an event when touched and when released, pausing content when touched but starting it again when released
# [5C-3]
# direction = touch
# rising-name = pp-pause
# falling-name = pp-pause

# THIS TEMPLATE
# =============

# The templates and examples of Pi Presents bind the following symbolic names to commands used by mediashow, liveshow and menu and to some special commands.
# So that gpio can be used with the examples these symbolic names are assigned to an arbitrary set of pins in this file. You will want to modify them for your application:

#   pp-shutdownnow   initiates shutdown
#   pp-down       down - move down a menu or next track in a mediashow
#   pp-up         up - move up a menu or previous track in a mediashow
#   pp-play       play - start playing a track in a menu etc.
#   pp-pause      pause - toggle pause in relevent tracks
#   pp-stop       stop - stop tracks and shows
#   pp-exit	  exit - stop tracks and shows (see manual for difference to pp-stop)

#   PIR - used as the trigger input for the exhibit example

# Other symbolic names for inputs can be defined in profiles and used for:
#  to initiate link commands in  hyperlinkshows
#  to initiate tracks in radiobuttonshows
#  for start-trigger end-trigger and next-trigger in mediashows


# DRIVER SECTION
# ==============
# title = MPR121            text which is reported on logs and error reports
# enabled = yes             yes/no a driver can be enabled/disabled using this so it can be left in pp_io_config
# tick-interval = 50        polling interval for inputs in mS.
# module = pp_mpr121driver  the python module that implements this driver. More than one I/O config file can use the same driver.
# 5A = on                   on/off enable the mpr121 with address 5A
# 5B = off                  on/off ignore the mpr121 with address 5B


# THE REAL STUFF
# -------

[DRIVER]
title = MPR121
enabled = yes
tick-interval = 50
module = pp_mpr121driver
5A = on
5B = off

# THE PINS

[5A-0]
direction = touch
rising-name = pp-shutdownnow

[5A-1]
direction = touch
rising-name = pp-up

[5A-2]
direction = touch
rising-name = pp-down

[5A-3]
direction = none

[5A-10]
direction = touch
rising-name = pp-stop

[5A-11]
direction = touch
falling-name = pp-play

# pin 0 on the mpr121 with address 5B will be ignored because 5B is set to off in the DRIVER section
[5B-0]
direction = touch
rising-name = pp-exit
