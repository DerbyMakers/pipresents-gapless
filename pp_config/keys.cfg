# This file in /pipresents/pp_home might be overwritten by updates
# If you edit it make a copy and place in the profile that is to use it or in pp_home

# There is no checking of the content of this file by Pi Presents, try any changes by
#  running from a terminal window so that any exceptions are reported.

# Various parts or Pi Presents defines symbolic names for input events and binds them to commands
# This file binds keyboard keys to the symbolic names of the input events used by
#    Pi Presents mediashow, liveshow and menu out of the box and other special events.
#    keys for hyperlinkshow and radiobuttonshow are not bound here. They are in the examples for these shows.
# The keys are those used in the manual, in templates, and examples
# You can add additional symbolic names and, delte those you do not want for a particular application.

# A keys.cfg can be placed in a profile or in pp_home. The profile will be searched first then pp_home then here.
# This file inside pipresents/pp_resources will be used by Pi Presents if keys.cfg has not been found elsewhere.

# format  - condition = symbolic_name
#    The allowable conditions are defined in
#    effbot.org/tkinterbook/tkinter-events-and-bindings.htm  in the <Return>, a, and <Shift-Up> sections.

# In additon to these bindings all the printing characters on the keyboard
# (the ones obeying the <Key> condition in the reference) are automatically bound to the
# symbolic name pp-key-x   e.g the 'a' key produces pp-key-a
# automatic binding of printing keys can be overriden by lines such as a = pp-pause
# the conditions and the symbolic names are case sensitive.

# Note:
# <any key> = pp-shutdown will not work as pp-shutdown needs to be asserted for 5 seconds.
# pp-shutdown is useful for gpio only.
# However you can shutdown the Pi from Pi Presents using a show control command or use
#  pp-shutdownnow to shutdown immediately.


# --------- the next line must be present to start the bindings
[keys]

# ----------  bind keys for the Pi Presents mediashow, menu and liveshow commands
<Break> = pp-terminate  ;CTRL-BREAK
<Escape>= pp-stop
<Up> = pp-up       ; cursor up
<Down> = pp-down   ; cursor down
<Return> = pp-play ; enter key
<space> = pp-pause ;space bar

# pp-exit
# pp-shutdown - no
# pp-shutdownnow
# pp-exitpipresents??
# omxvolup mplayvolup uzbl 

# --------  add your own bindings here.


# SOME EXAMPLES

# a = pp-pause   ;make key 'a' toggle pause in addition to the spacebar
# k = pp-shutdownnow  ;shutdown the Raspberry Pi immediately by pressing k key
# <Control-F1> = pp-terminate ; make CTRL-F1 do an exit in addition to CTRL-BREAK

